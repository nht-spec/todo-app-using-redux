{"ast":null,"code":"var _jsxFileName = \"D:\\\\todo-app\\\\src\\\\features\\\\components\\\\TodoList\\\\TodoList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Todo from '../Todo/Todo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoList(_ref) {\n  _s();\n\n  let {\n    todoList,\n    mode\n  } = _ref;\n  const [isCompleted, setIsCompleted] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleRemoveAll = () => {\n    dispatch({\n      type: 'REMOVE_All_TODO',\n      payload: []\n    });\n  };\n\n  useEffect(() => {\n    const newArr = todoList.filter(data => data.status === 'completed');\n    console.log(newArr.length);\n    newArr.length !== 0 && setIsCompleted(true);\n    newArr.length === 0 && setIsCompleted(false);\n  }, [todoList]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [todoList.map((data, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Todo, {\n        data: data,\n        mode: mode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 6\n      }, this)\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this)), mode === 'completed' && isCompleted && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRemoveAll,\n      children: \"RemoveAll\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 3\n  }, this);\n}\n\n_s(TodoList, \"hfnl4hWBh6AwSWOs0Pd6uUHf0kk=\", false, function () {\n  return [useDispatch];\n});\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["D:/todo-app/src/features/components/TodoList/TodoList.jsx"],"names":["React","useEffect","useState","useDispatch","Todo","TodoList","todoList","mode","isCompleted","setIsCompleted","dispatch","handleRemoveAll","type","payload","newArr","filter","data","status","console","log","length","map","idx"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,IAAP,MAAiB,cAAjB;;;AAEA,SAASC,QAAT,OAAsC;AAAA;;AAAA,MAApB;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAoB;AACrC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAMQ,QAAQ,GAAGP,WAAW,EAA5B;;AAEA,QAAMQ,eAAe,GAAG,MAAM;AAC7BD,IAAAA,QAAQ,CAAC;AACRE,MAAAA,IAAI,EAAE,iBADE;AAERC,MAAAA,OAAO,EAAE;AAFD,KAAD,CAAR;AAIA,GALD;;AAOAZ,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMa,MAAM,GAAGR,QAAQ,CAACS,MAAT,CAAiBC,IAAD,IAAUA,IAAI,CAACC,MAAL,KAAgB,WAA1C,CAAf;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACM,MAAnB;AACAN,IAAAA,MAAM,CAACM,MAAP,KAAkB,CAAlB,IAAuBX,cAAc,CAAC,IAAD,CAArC;AACAK,IAAAA,MAAM,CAACM,MAAP,KAAkB,CAAlB,IAAuBX,cAAc,CAAC,KAAD,CAArC;AACA,GANQ,EAMN,CAACH,QAAD,CANM,CAAT;AAQA,sBACC;AAAA,eACEA,QAAQ,CAACe,GAAT,CAAa,CAACL,IAAD,EAAOM,GAAP,kBACb;AAAA,6BACC,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEN,IAAZ;AAAkB,QAAA,IAAI,EAAET;AAAxB;AAAA;AAAA;AAAA;AAAA;AADD,OAAUe,GAAV;AAAA;AAAA;AAAA;AAAA,YADA,CADF,EAMEf,IAAI,KAAK,WAAT,IAAwBC,WAAxB,iBACA;AAAQ,MAAA,OAAO,EAAEG,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAYA;;GA/BQN,Q;UAESF,W;;;KAFTE,Q;AAiCT,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Todo from '../Todo/Todo';\r\n\r\nfunction TodoList({ todoList, mode }) {\r\n\tconst [isCompleted, setIsCompleted] = useState(false);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst handleRemoveAll = () => {\r\n\t\tdispatch({\r\n\t\t\ttype: 'REMOVE_All_TODO',\r\n\t\t\tpayload: [],\r\n\t\t});\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tconst newArr = todoList.filter((data) => data.status === 'completed');\r\n\r\n\t\tconsole.log(newArr.length);\r\n\t\tnewArr.length !== 0 && setIsCompleted(true);\r\n\t\tnewArr.length === 0 && setIsCompleted(false);\r\n\t}, [todoList]);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{todoList.map((data, idx) => (\r\n\t\t\t\t<div key={idx}>\r\n\t\t\t\t\t<Todo data={data} mode={mode} />\r\n\t\t\t\t</div>\r\n\t\t\t))}\r\n\t\t\t{mode === 'completed' && isCompleted && (\r\n\t\t\t\t<button onClick={handleRemoveAll}>RemoveAll</button>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default TodoList;\r\n"]},"metadata":{},"sourceType":"module"}