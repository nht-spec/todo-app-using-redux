{"ast":null,"code":"let initialState = {\n  list: []\n};\n\nif (localStorage.getItem('list')) {\n  initialState.list = JSON.parse(localStorage.getItem('list'));\n} else {\n  initialState.list = [];\n}\n\nconst todoReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'ADD_TODO':\n      {\n        const newList = [...state.list];\n        newList.push(action.payload);\n        return { ...state,\n          list: newList\n        };\n      }\n\n    case 'UPDATE_TODO':\n      {\n        const todoId = action.payload.id;\n        return { ...state,\n          list: state.list.map(todo => todo.id === todoId ? { ...todo,\n            status: action.payload.status\n          } : todo)\n        };\n      }\n\n    case 'REMOVE_TODO':\n      return { ...state,\n        list: state.list.filter(item => item.id !== action.payload)\n      };\n\n    case 'REMOVE_All_TODO':\n      return { ...state,\n        list: state.list = []\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default todoReducer;","map":{"version":3,"sources":["D:/todo-app/src/reducers/todo.js"],"names":["initialState","list","localStorage","getItem","JSON","parse","todoReducer","state","action","type","newList","push","payload","todoId","id","map","todo","status","filter","item"],"mappings":"AAAA,IAAIA,YAAY,GAAG;AAClBC,EAAAA,IAAI,EAAE;AADY,CAAnB;;AAIA,IAAIC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAJ,EAAkC;AACjCH,EAAAA,YAAY,CAACC,IAAb,GAAoBG,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAApB;AACA,CAFD,MAEO;AACNH,EAAAA,YAAY,CAACC,IAAb,GAAoB,EAApB;AACA;;AAED,MAAMK,WAAW,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBP,YAAyB;AAAA,MAAXQ,MAAW;;AACrD,UAAQA,MAAM,CAACC,IAAf;AACC,SAAK,UAAL;AAAiB;AAChB,cAAMC,OAAO,GAAG,CAAC,GAAGH,KAAK,CAACN,IAAV,CAAhB;AACAS,QAAAA,OAAO,CAACC,IAAR,CAAaH,MAAM,CAACI,OAApB;AACA,eAAO,EACN,GAAGL,KADG;AAENN,UAAAA,IAAI,EAAES;AAFA,SAAP;AAIA;;AAED,SAAK,aAAL;AAAoB;AACnB,cAAMG,MAAM,GAAGL,MAAM,CAACI,OAAP,CAAeE,EAA9B;AACA,eAAO,EACN,GAAGP,KADG;AAENN,UAAAA,IAAI,EAAEM,KAAK,CAACN,IAAN,CAAWc,GAAX,CAAgBC,IAAD,IACpBA,IAAI,CAACF,EAAL,KAAYD,MAAZ,GACG,EACA,GAAGG,IADH;AAEAC,YAAAA,MAAM,EAAET,MAAM,CAACI,OAAP,CAAeK;AAFvB,WADH,GAKGD,IANE;AAFA,SAAP;AAWA;;AAED,SAAK,aAAL;AACC,aAAO,EACN,GAAGT,KADG;AAENN,QAAAA,IAAI,EAAEM,KAAK,CAACN,IAAN,CAAWiB,MAAX,CAAmBC,IAAD,IAAUA,IAAI,CAACL,EAAL,KAAYN,MAAM,CAACI,OAA/C;AAFA,OAAP;;AAKD,SAAK,iBAAL;AACC,aAAO,EACN,GAAGL,KADG;AAENN,QAAAA,IAAI,EAAGM,KAAK,CAACN,IAAN,GAAa;AAFd,OAAP;;AAKD;AACC,aAAOM,KAAP;AAtCF;AAwCA,CAzCD;;AA0CA,eAAeD,WAAf","sourcesContent":["let initialState = {\r\n\tlist: [],\r\n};\r\n\r\nif (localStorage.getItem('list')) {\r\n\tinitialState.list = JSON.parse(localStorage.getItem('list'));\r\n} else {\r\n\tinitialState.list = [];\r\n}\r\n\r\nconst todoReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'ADD_TODO': {\r\n\t\t\tconst newList = [...state.list];\r\n\t\t\tnewList.push(action.payload);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tlist: newList,\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase 'UPDATE_TODO': {\r\n\t\t\tconst todoId = action.payload.id;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tlist: state.list.map((todo) =>\r\n\t\t\t\t\ttodo.id === todoId\r\n\t\t\t\t\t\t? {\r\n\t\t\t\t\t\t\t\t...todo,\r\n\t\t\t\t\t\t\t\tstatus: action.payload.status,\r\n\t\t\t\t\t\t  }\r\n\t\t\t\t\t\t: todo\r\n\t\t\t\t),\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase 'REMOVE_TODO':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tlist: state.list.filter((item) => item.id !== action.payload),\r\n\t\t\t};\r\n\r\n\t\tcase 'REMOVE_All_TODO':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tlist: (state.list = []),\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\nexport default todoReducer;\r\n"]},"metadata":{},"sourceType":"module"}