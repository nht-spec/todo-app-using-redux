{"ast":null,"code":"var _jsxFileName = \"D:\\\\todo-app\\\\src\\\\features\\\\components\\\\Todo\\\\Todo.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Todo(_ref) {\n  _s();\n\n  let {\n    data\n  } = _ref;\n  const todoList = useSelector(state => state.todo.list);\n  const dispatch = useDispatch();\n\n  const handleRemove = id => {\n    dispatch({\n      type: 'REMOVE_TODO',\n      payload: id\n    });\n  };\n\n  console.log(todoList);\n\n  const handleChange = evt => {\n    console.log(evt.target.id, data.id);\n\n    if (evt.target.checked) {\n      dispatch({\n        type: 'UPDATE_TODO',\n        payload: {\n          id: data.id,\n          title: data.title,\n          status: 'completed'\n        }\n      });\n    }\n\n    if (evt.target.checked === false) {\n      dispatch({\n        type: 'UPDATE_TODO',\n        payload: {\n          id: data.id,\n          title: data.title,\n          status: 'active'\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      onClick: handleChange,\n      id: data.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: data.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleRemove(data.id),\n      children: \"remove\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Todo, \"YF3/TLP8DhksZsyrP4kXys09RlI=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["D:/todo-app/src/features/components/Todo/Todo.jsx"],"names":["React","useDispatch","useSelector","Todo","data","todoList","state","todo","list","dispatch","handleRemove","id","type","payload","console","log","handleChange","evt","target","checked","title","status"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;;AAEA,SAASC,IAAT,OAAwB;AAAA;;AAAA,MAAV;AAAEC,IAAAA;AAAF,GAAU;AACvB,QAAMC,QAAQ,GAAGH,WAAW,CAAEI,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWC,IAAvB,CAA5B;AAEA,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;;AAEA,QAAMS,YAAY,GAAIC,EAAD,IAAQ;AAC5BF,IAAAA,QAAQ,CAAC;AACRG,MAAAA,IAAI,EAAE,aADE;AAERC,MAAAA,OAAO,EAAEF;AAFD,KAAD,CAAR;AAIA,GALD;;AAOAG,EAAAA,OAAO,CAACC,GAAR,CAAYV,QAAZ;;AAEA,QAAMW,YAAY,GAAIC,GAAD,IAAS;AAC7BH,IAAAA,OAAO,CAACC,GAAR,CAAYE,GAAG,CAACC,MAAJ,CAAWP,EAAvB,EAA2BP,IAAI,CAACO,EAAhC;;AACA,QAAIM,GAAG,CAACC,MAAJ,CAAWC,OAAf,EAAwB;AACvBV,MAAAA,QAAQ,CAAC;AACRG,QAAAA,IAAI,EAAE,aADE;AAERC,QAAAA,OAAO,EAAE;AACRF,UAAAA,EAAE,EAAEP,IAAI,CAACO,EADD;AAERS,UAAAA,KAAK,EAAEhB,IAAI,CAACgB,KAFJ;AAGRC,UAAAA,MAAM,EAAE;AAHA;AAFD,OAAD,CAAR;AAQA;;AACD,QAAIJ,GAAG,CAACC,MAAJ,CAAWC,OAAX,KAAuB,KAA3B,EAAkC;AACjCV,MAAAA,QAAQ,CAAC;AACRG,QAAAA,IAAI,EAAE,aADE;AAERC,QAAAA,OAAO,EAAE;AACRF,UAAAA,EAAE,EAAEP,IAAI,CAACO,EADD;AAERS,UAAAA,KAAK,EAAEhB,IAAI,CAACgB,KAFJ;AAGRC,UAAAA,MAAM,EAAE;AAHA;AAFD,OAAD,CAAR;AAQA;AACD,GAtBD;;AAwBA,sBACC;AAAA,4BACC;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,OAAO,EAAEL,YAAhC;AAA8C,MAAA,EAAE,EAAEZ,IAAI,CAACO;AAAvD;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAA,gBAAIP,IAAI,CAACgB;AAAT;AAAA;AAAA;AAAA;AAAA,YAFD,eAGC;AAAQ,MAAA,OAAO,EAAE,MAAMV,YAAY,CAACN,IAAI,CAACO,EAAN,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAOA;;GA7CQR,I;UACSD,W,EAEAD,W;;;KAHTE,I;AA+CT,eAAeA,IAAf","sourcesContent":["import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nfunction Todo({ data }) {\r\n\tconst todoList = useSelector((state) => state.todo.list);\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst handleRemove = (id) => {\r\n\t\tdispatch({\r\n\t\t\ttype: 'REMOVE_TODO',\r\n\t\t\tpayload: id,\r\n\t\t});\r\n\t};\r\n\r\n\tconsole.log(todoList);\r\n\r\n\tconst handleChange = (evt) => {\r\n\t\tconsole.log(evt.target.id, data.id);\r\n\t\tif (evt.target.checked) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: 'UPDATE_TODO',\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tid: data.id,\r\n\t\t\t\t\ttitle: data.title,\r\n\t\t\t\t\tstatus: 'completed',\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t}\r\n\t\tif (evt.target.checked === false) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: 'UPDATE_TODO',\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tid: data.id,\r\n\t\t\t\t\ttitle: data.title,\r\n\t\t\t\t\tstatus: 'active',\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<input type='checkbox' onClick={handleChange} id={data.id} />\r\n\t\t\t<p>{data.title}</p>\r\n\t\t\t<button onClick={() => handleRemove(data.id)}>remove</button>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Todo;\r\n"]},"metadata":{},"sourceType":"module"}