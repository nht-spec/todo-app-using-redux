{"ast":null,"code":"var _jsxFileName = \"D:\\\\todo-app\\\\src\\\\features\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport AddTodo from './components/AddTodo/AddTodo';\nimport NavBar from './components/NavBar/NavBar';\nimport TodoList from './components/TodoList/TodoList';\nimport './styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nTodoFeatures.propTypes = {};\n\nfunction TodoFeatures(props) {\n  _s();\n\n  const [mode, setMode] = useState('');\n  const todoList = useSelector(state => state.todo.list);\n  const dispatch = useDispatch();\n\n  const handleSubmit = value => {\n    dispatch({\n      type: 'ADD_TODO',\n      payload: {\n        title: value.todo,\n        status: 'active'\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-Feature\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title color-darkslategray d-flex d-flex-center\",\n      children: \"#todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(NavBar, {\n      modeCurrent: setMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }, this), mode !== 'completed' && /*#__PURE__*/_jsxDEV(AddTodo, {\n      handlesubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todoList: todoList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 3\n  }, this);\n}\n\n_s(TodoFeatures, \"LyvvRomEYkayeOArIcjTw0Vad6M=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = TodoFeatures;\nexport default TodoFeatures;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoFeatures\");","map":{"version":3,"sources":["D:/todo-app/src/features/index.jsx"],"names":["React","useState","useDispatch","useSelector","AddTodo","NavBar","TodoList","TodoFeatures","propTypes","props","mode","setMode","todoList","state","todo","list","dispatch","handleSubmit","value","type","payload","title","status"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAO,eAAP;;AACAC,YAAY,CAACC,SAAb,GAAyB,EAAzB;;AAEA,SAASD,YAAT,CAAsBE,KAAtB,EAA6B;AAAA;;AAC5B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMW,QAAQ,GAAGT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWC,IAAvB,CAA5B;AACA,QAAMC,QAAQ,GAAGd,WAAW,EAA5B;;AAEA,QAAMe,YAAY,GAAIC,KAAD,IAAW;AAC/BF,IAAAA,QAAQ,CAAC;AACRG,MAAAA,IAAI,EAAE,UADE;AAERC,MAAAA,OAAO,EAAE;AACRC,QAAAA,KAAK,EAAEH,KAAK,CAACJ,IADL;AAERQ,QAAAA,MAAM,EAAE;AAFA;AAFD,KAAD,CAAR;AAOA,GARD;;AAUA,sBACC;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACC;AAAI,MAAA,SAAS,EAAC,gDAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAIC,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAEX;AAArB;AAAA;AAAA;AAAA;AAAA,YAJD,EAKED,IAAI,KAAK,WAAT,iBAAwB,QAAC,OAAD;AAAS,MAAA,YAAY,EAAEO;AAAvB;AAAA;AAAA;AAAA;AAAA,YAL1B,eAMC,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEL;AAApB;AAAA;AAAA;AAAA;AAAA,YAND;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAUA;;GAzBQL,Y;UAESJ,W,EACAD,W;;;KAHTK,Y;AA2BT,eAAeA,YAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport AddTodo from './components/AddTodo/AddTodo';\r\nimport NavBar from './components/NavBar/NavBar';\r\nimport TodoList from './components/TodoList/TodoList';\r\nimport './styles.scss';\r\nTodoFeatures.propTypes = {};\r\n\r\nfunction TodoFeatures(props) {\r\n\tconst [mode, setMode] = useState('');\r\n\tconst todoList = useSelector((state) => state.todo.list);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst handleSubmit = (value) => {\r\n\t\tdispatch({\r\n\t\t\ttype: 'ADD_TODO',\r\n\t\t\tpayload: {\r\n\t\t\t\ttitle: value.todo,\r\n\t\t\t\tstatus: 'active',\r\n\t\t\t},\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='todo-Feature'>\r\n\t\t\t<h2 className='title color-darkslategray d-flex d-flex-center'>\r\n\t\t\t\t#todo\r\n\t\t\t</h2>\r\n\t\t\t<NavBar modeCurrent={setMode} />\r\n\t\t\t{mode !== 'completed' && <AddTodo handlesubmit={handleSubmit} />}\r\n\t\t\t<TodoList todoList={todoList} />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default TodoFeatures;\r\n"]},"metadata":{},"sourceType":"module"}