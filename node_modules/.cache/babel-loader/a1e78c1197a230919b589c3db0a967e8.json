{"ast":null,"code":"var _jsxFileName = \"D:\\\\todo-app\\\\src\\\\features\\\\components\\\\TodoList\\\\TodoList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Todo from '../Todo/Todo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoList(_ref) {\n  _s();\n\n  let {\n    todoList,\n    mode\n  } = _ref;\n  const dispatch = useDispatch();\n  const [completedLength, setCompletedLength] = useState(false);\n\n  const handleRemoveAll = () => {\n    dispatch({\n      type: 'REMOVE_All_TODO',\n      payload: []\n    });\n  };\n\n  useEffect(() => {\n    todoList.length !== 0 && todoList.forEach(data => {\n      data.status === 'completed' && setCompletedLength(true); // data.status !== 'completed' && setCompletedLength(false);\n    });\n    todoList.length === 0 && setCompletedLength(false);\n  }, [todoList]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '32px'\n      },\n      children: todoList.map(data => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Todo, {\n          data: data,\n          mode: mode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 7\n        }, this)\n      }, data.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 4\n    }, this), mode === 'completed' && completedLength && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRemoveAll,\n      children: \"RemoveAll\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 3\n  }, this);\n}\n\n_s(TodoList, \"yUdUmssxAEPwxhDB3CFMTZ9iGWI=\", false, function () {\n  return [useDispatch];\n});\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["D:/todo-app/src/features/components/TodoList/TodoList.jsx"],"names":["React","useEffect","useState","useDispatch","Todo","TodoList","todoList","mode","dispatch","completedLength","setCompletedLength","handleRemoveAll","type","payload","length","forEach","data","status","marginTop","map","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,IAAP,MAAiB,cAAjB;;;AAEA,SAASC,QAAT,OAAsC;AAAA;;AAAA,MAApB;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAoB;AACrC,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAM,CAACM,eAAD,EAAkBC,kBAAlB,IAAwCR,QAAQ,CAAC,KAAD,CAAtD;;AAEA,QAAMS,eAAe,GAAG,MAAM;AAC7BH,IAAAA,QAAQ,CAAC;AACRI,MAAAA,IAAI,EAAE,iBADE;AAERC,MAAAA,OAAO,EAAE;AAFD,KAAD,CAAR;AAIA,GALD;;AAOAZ,EAAAA,SAAS,CAAC,MAAM;AACfK,IAAAA,QAAQ,CAACQ,MAAT,KAAoB,CAApB,IACCR,QAAQ,CAACS,OAAT,CAAkBC,IAAD,IAAU;AAC1BA,MAAAA,IAAI,CAACC,MAAL,KAAgB,WAAhB,IAA+BP,kBAAkB,CAAC,IAAD,CAAjD,CAD0B,CAE1B;AACA,KAHD,CADD;AAMAJ,IAAAA,QAAQ,CAACQ,MAAT,KAAoB,CAApB,IAAyBJ,kBAAkB,CAAC,KAAD,CAA3C;AACA,GARQ,EAQN,CAACJ,QAAD,CARM,CAAT;AAUA,sBACC;AAAA,4BACC;AAAK,MAAA,KAAK,EAAE;AAAEY,QAAAA,SAAS,EAAE;AAAb,OAAZ;AAAA,gBACEZ,QAAQ,CAACa,GAAT,CAAcH,IAAD,iBACb;AAAA,+BACC,QAAC,IAAD;AAAM,UAAA,IAAI,EAAEA,IAAZ;AAAkB,UAAA,IAAI,EAAET;AAAxB;AAAA;AAAA;AAAA;AAAA;AADD,SAAUS,IAAI,CAACI,EAAf;AAAA;AAAA;AAAA;AAAA,cADA;AADF;AAAA;AAAA;AAAA;AAAA,YADD,EASEb,IAAI,KAAK,WAAT,IAAwBE,eAAxB,iBACA;AAAQ,MAAA,OAAO,EAAEE,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAeA;;GApCQN,Q;UACSF,W;;;KADTE,Q;AAsCT,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Todo from '../Todo/Todo';\r\n\r\nfunction TodoList({ todoList, mode }) {\r\n\tconst dispatch = useDispatch();\r\n\tconst [completedLength, setCompletedLength] = useState(false);\r\n\r\n\tconst handleRemoveAll = () => {\r\n\t\tdispatch({\r\n\t\t\ttype: 'REMOVE_All_TODO',\r\n\t\t\tpayload: [],\r\n\t\t});\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\ttodoList.length !== 0 &&\r\n\t\t\ttodoList.forEach((data) => {\r\n\t\t\t\tdata.status === 'completed' && setCompletedLength(true);\r\n\t\t\t\t// data.status !== 'completed' && setCompletedLength(false);\r\n\t\t\t});\r\n\r\n\t\ttodoList.length === 0 && setCompletedLength(false);\r\n\t}, [todoList]);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div style={{ marginTop: '32px' }}>\r\n\t\t\t\t{todoList.map((data) => (\r\n\t\t\t\t\t<div key={data.id}>\r\n\t\t\t\t\t\t<Todo data={data} mode={mode} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\r\n\t\t\t{mode === 'completed' && completedLength && (\r\n\t\t\t\t<button onClick={handleRemoveAll}>RemoveAll</button>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default TodoList;\r\n"]},"metadata":{},"sourceType":"module"}