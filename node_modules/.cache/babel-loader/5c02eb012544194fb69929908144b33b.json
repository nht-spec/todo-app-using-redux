{"ast":null,"code":"var _jsxFileName = \"D:\\\\todo-app\\\\src\\\\features\\\\components\\\\Todo\\\\Todo.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport './styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Todo(_ref) {\n  _s();\n\n  let {\n    data,\n    mode\n  } = _ref;\n  const dispatch = useDispatch();\n\n  const handleChange = evt => {\n    evt.target.checked && dispatch({\n      type: 'UPDATE_TODO',\n      payload: {\n        id: data.id,\n        title: data.title,\n        status: 'completed'\n      }\n    });\n    evt.target.checked === false && dispatch({\n      type: 'UPDATE_TODO',\n      payload: {\n        id: data.id,\n        title: data.title,\n        status: 'active'\n      }\n    });\n  };\n\n  const handleRemove = id => {\n    dispatch({\n      type: 'REMOVE_TODO',\n      payload: id\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex \",\n    children: [mode === 'completed' && data.status === 'completed' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"check-box\",\n        type: \"checkbox\",\n        defaultChecked: data.status === 'completed' && true,\n        onClick: handleChange,\n        id: data.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"fw-500 title-info\",\n        children: data.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleRemove(data.id),\n        children: \"remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true), mode === 'active' && data.status === 'active' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"check-box\",\n        type: \"checkbox\",\n        defaultChecked: data.status === 'completed' && true,\n        onClick: handleChange,\n        id: data.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"fw-500 title-info\",\n        children: data.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true), mode === 'all' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"check-box \",\n        id: data.id,\n        type: \"checkbox\",\n        defaultChecked: data.status === 'completed' && true,\n        onClick: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"fw-500 title-info\",\n        children: data.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Todo, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["D:/todo-app/src/features/components/Todo/Todo.jsx"],"names":["React","useDispatch","Todo","data","mode","dispatch","handleChange","evt","target","checked","type","payload","id","title","status","handleRemove"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport './styles.scss';\r\n\r\nfunction Todo({ data, mode }) {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst handleChange = (evt) => {\r\n\t\tevt.target.checked &&\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: 'UPDATE_TODO',\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tid: data.id,\r\n\t\t\t\t\ttitle: data.title,\r\n\t\t\t\t\tstatus: 'completed',\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\tevt.target.checked === false &&\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: 'UPDATE_TODO',\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tid: data.id,\r\n\t\t\t\t\ttitle: data.title,\r\n\t\t\t\t\tstatus: 'active',\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst handleRemove = (id) => {\r\n\t\tdispatch({\r\n\t\t\ttype: 'REMOVE_TODO',\r\n\t\t\tpayload: id,\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='d-flex '>\r\n\t\t\t{mode === 'completed' && data.status === 'completed' && (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tclassName='check-box'\r\n\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\tdefaultChecked={data.status === 'completed' && true}\r\n\t\t\t\t\t\tonClick={handleChange}\r\n\t\t\t\t\t\tid={data.id}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<p className='fw-500 title-info'>{data.title}</p>\r\n\t\t\t\t\t<button onClick={() => handleRemove(data.id)}>\r\n\t\t\t\t\t\tremove\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\r\n\t\t\t{mode === 'active' && data.status === 'active' && (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tclassName='check-box'\r\n\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\tdefaultChecked={data.status === 'completed' && true}\r\n\t\t\t\t\t\tonClick={handleChange}\r\n\t\t\t\t\t\tid={data.id}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<p className='fw-500 title-info'>{data.title}</p>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\r\n\t\t\t{mode === 'all' && (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tclassName='check-box '\r\n\t\t\t\t\t\tid={data.id}\r\n\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\tdefaultChecked={data.status === 'completed' && true}\r\n\t\t\t\t\t\tonClick={handleChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<p className='fw-500 title-info'>{data.title}</p>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Todo;\r\n"]},"metadata":{},"sourceType":"module"}