{"ast":null,"code":"var _jsxFileName = \"D:\\\\todo-app\\\\src\\\\features\\\\components\\\\AddTodo\\\\AddTodo.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport InputField from '../../../components/InputField/InputField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddTodo(_ref) {\n  _s();\n\n  let {\n    handlesubmit\n  } = _ref;\n  const form = useForm({\n    defaultValues: {\n      todo: ''\n    }\n  });\n  console.log(form.formState.errors.todo);\n\n  const handleSubmit = value => {\n    handlesubmit && handlesubmit(value);\n    form.reset();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: form.handleSubmit(handleSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(InputField, {\n        name: \"todo\",\n        form: form,\n        errors: form.formState.errors,\n        mess: 'Todo is required'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 4\n    }, this), form.formState.errors.todo.message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: form.formState.errors.todo.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 3\n  }, this);\n}\n\n_s(AddTodo, \"woqMTX6igxsX6/9vX4dQZlxR7yY=\", false, function () {\n  return [useForm];\n});\n\n_c = AddTodo;\nexport default AddTodo;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTodo\");","map":{"version":3,"sources":["D:/todo-app/src/features/components/AddTodo/AddTodo.jsx"],"names":["React","useForm","InputField","AddTodo","handlesubmit","form","defaultValues","todo","console","log","formState","errors","handleSubmit","value","reset","message"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,UAAP,MAAuB,2CAAvB;;;AAEA,SAASC,OAAT,OAAmC;AAAA;;AAAA,MAAlB;AAAEC,IAAAA;AAAF,GAAkB;AAClC,QAAMC,IAAI,GAAGJ,OAAO,CAAC;AACpBK,IAAAA,aAAa,EAAE;AACdC,MAAAA,IAAI,EAAE;AADQ;AADK,GAAD,CAApB;AAMAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACK,SAAL,CAAeC,MAAf,CAAsBJ,IAAlC;;AAEA,QAAMK,YAAY,GAAIC,KAAD,IAAW;AAC/BT,IAAAA,YAAY,IAAIA,YAAY,CAACS,KAAD,CAA5B;AACAR,IAAAA,IAAI,CAACS,KAAL;AACA,GAHD;;AAKA,sBACC;AAAM,IAAA,QAAQ,EAAET,IAAI,CAACO,YAAL,CAAkBA,YAAlB,CAAhB;AAAA,4BACC;AAAA,8BACC,QAAC,UAAD;AACC,QAAA,IAAI,EAAC,MADN;AAEC,QAAA,IAAI,EAAEP,IAFP;AAGC,QAAA,MAAM,EAAEA,IAAI,CAACK,SAAL,CAAeC,MAHxB;AAIC,QAAA,IAAI,EAAE;AAJP;AAAA;AAAA;AAAA;AAAA,cADD,eAOC;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,EAUEN,IAAI,CAACK,SAAL,CAAeC,MAAf,CAAsBJ,IAAtB,CAA2BQ,OAA3B,iBACA;AAAA,gBAAIV,IAAI,CAACK,SAAL,CAAeC,MAAf,CAAsBJ,IAAtB,CAA2BQ;AAA/B;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAgBA;;GA9BQZ,O;UACKF,O;;;KADLE,O;AAgCT,eAAeA,OAAf","sourcesContent":["import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport InputField from '../../../components/InputField/InputField';\r\n\r\nfunction AddTodo({ handlesubmit }) {\r\n\tconst form = useForm({\r\n\t\tdefaultValues: {\r\n\t\t\ttodo: '',\r\n\t\t},\r\n\t});\r\n\r\n\tconsole.log(form.formState.errors.todo);\r\n\r\n\tconst handleSubmit = (value) => {\r\n\t\thandlesubmit && handlesubmit(value);\r\n\t\tform.reset();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form onSubmit={form.handleSubmit(handleSubmit)}>\r\n\t\t\t<div>\r\n\t\t\t\t<InputField\r\n\t\t\t\t\tname='todo'\r\n\t\t\t\t\tform={form}\r\n\t\t\t\t\terrors={form.formState.errors}\r\n\t\t\t\t\tmess={'Todo is required'}\r\n\t\t\t\t/>\r\n\t\t\t\t<button type='submit'>Add</button>\r\n\t\t\t</div>\r\n\t\t\t{form.formState.errors.todo.message && (\r\n\t\t\t\t<p>{form.formState.errors.todo.message}</p>\r\n\t\t\t)}\r\n\t\t</form>\r\n\t);\r\n}\r\n\r\nexport default AddTodo;\r\n"]},"metadata":{},"sourceType":"module"}